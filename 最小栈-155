
/*设计一个支持 push，pop，top 操作，并能在常数时间内检索到最小元素的栈
push(x) --将元素 x 推入栈中。
pop() --删除栈顶的元素。
top() --获取栈顶元素。
getMin() --检索栈中的最小元素。*/
class MinStack {
public:
	/** initialize your data structure here. */
	stack<int> S;
	stack<int> MinS;
	MinStack() {
	}

	void push(int x) {
		S.push(x);
		if (MinS.empty() ||x <= MinS.top())
			MinS.push(x);
	}

	void pop() {
		if (S.top() == MinS.top())
			MinS.pop();
		S.pop();
	}

	int top() {
		return S.top();
	}

	int getMin() {
		return MinS.top();
	}

};


/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
